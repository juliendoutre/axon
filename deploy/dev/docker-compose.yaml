name: axon
services:
  postgresql:
    image: index.docker.io/postgres:17.2@sha256:3267c505060a0052e5aa6e5175a7b41ab6b04da2f8c4540fc6e98a37210aa2d3
    init: true
    restart: unless-stopped
    container_name: $POSTGRES_HOST
    hostname: $POSTGRES_HOST
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    networks:
      - axon-network
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  keycloak:
    image: quay.io/keycloak/keycloak:26.1@sha256:75ca4b2e4e954ff89c20ba8e5aeeef3bd0d250847fedb1c9752949823b319dda
    init: true
    restart: unless-stopped
    container_name: $KEYCLOAK_HOST
    hostname: $KEYCLOAK_HOST
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: $KEYCLOAK_HTTP_PORT
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: $KEYCLOAK_ADMIN_PASSWORD
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
      KC_DB: postgres
      KC_DB_URL_HOST: $POSTGRES_HOST
      KC_DB_URL_PORT: $POSTGRES_PORT
      KC_DB_URL_DATABASE: $POSTGRES_DB
      KC_DB_SCHEMA: $KEYCLOAK_SCHEMA
      KC_DB_USERNAME: $POSTGRES_USER
      KC_DB_PASSWORD: $POSTGRES_PASSWORD
    networks:
      - axon-network
    ports:
      - $KEYCLOAK_HTTP_PORT:$KEYCLOAK_HTTP_PORT
      - $KEYCLOAK_HTTPS_PORT:$KEYCLOAK_HTTPS_PORT
    command: [ "start-dev", "--http-port", "$KEYCLOAK_HTTP_PORT", "--https-port", "$KEYCLOAK_HTTPS_PORT" ]
    depends_on:
      postgresql:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  migrator:
    build:
      context: ../..
      dockerfile: ./images/migrator.Dockerfile
    init: true
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      MIGRATIONS_PATH: $MIGRATIONS_PATH
    volumes:
      - ../../sql:$MIGRATIONS_PATH:ro
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - axon-network
  temporal:
    image: index.docker.io/temporalio/auto-setup:1.26.2@sha256:e9245820522233ec6a59ad69c6512ae4450705ee02bf6894fc61ba13b238c1c0
    init: true
    restart: unless-stopped
    container_name: $TEMPORAL_HOST
    hostname: $TEMPORAL_HOST
    environment:
      DB: postgres12_pgx
      POSTGRES_SEEDS: $POSTGRES_HOST
      DB_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PWD: $POSTGRES_PASSWORD
      DYNAMIC_CONFIG_FILE_PATH: config.yaml
    networks:
      - axon-network
    ports:
      - $TEMPORAL_PORT:$TEMPORAL_PORT
    volumes:
      - type: bind
        read_only: true
        source: ./temporal.yaml
        target: /etc/temporal/config.yaml
    depends_on:
      postgresql:
        condition: service_healthy
  temporal-ui:
    image: index.docker.io/temporalio/ui:2.34.0@sha256:cb17ea423d76a8a19a269d0bcd81fc12eee1f6365acd2a56b590dafb35696a95
    init: true
    restart: unless-stopped
    container_name: $TEMPORAL_UI_HOST
    hostname: $TEMPORAL_UI_HOST
    environment:
      TEMPORAL_ADDRESS: $TEMPORAL_HOST:$TEMPORAL_PORT
      TEMPORAL_CORS_ORIGINS: http://localhost:3000 # TODO
    networks:
      - axon-network
    ports:
      - $TEMPORAL_UI_PORT:$TEMPORAL_UI_PORT
    depends_on:
      temporal:
        condition: service_started
  server:
    build:
      context: ../..
      dockerfile: ./images/server.Dockerfile
    init: true
    restart: unless-stopped
    container_name: server
    hostname: server
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      SERVER_PORT: $SERVER_PORT
      SERVER_CERT_PATH: $SERVER_CERT_PATH
      SERVER_KEY_PATH: $SERVER_KEY_PATH
      SERVER_JWKS_URLS: $SERVER_JWKS_URLS
      SERVER_POLICY_PATH: $SERVER_POLICY_PATH
    volumes:
      - type: bind
        read_only: true
        source: ./server.crt.pem
        target: /etc/axon/server/server.crt.pem
      - type: bind
        read_only: true
        source: ./server.key.pem
        target: /etc/axon/server/server.key.pem
      - type: bind
        read_only: true
        source: ./policy.rego
        target: /etc/axon/server/policy.rego
    ports:
      - $SERVER_PORT:$SERVER_PORT
    networks:
      - axon-network
    depends_on:
      migrator:
        condition: service_completed_successfully
      postgresql:
        condition: service_healthy
      keycloak:
        condition: service_started
networks:
  axon-network:
    driver: bridge
    name: axon-network
