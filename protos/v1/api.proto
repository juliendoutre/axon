syntax = "proto3";

package axon.api.v1;

option go_package = "pkg/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

service axon {
    rpc GetVersion(google.protobuf.Empty) returns (Version);
    rpc Observe(ObserveInput) returns (google.protobuf.Empty);
    rpc CountObservations(CountObservationsInput) returns (CountObservationsOutput);
    rpc ListObservations(ListObservationsInput) returns (ListObservationsOutput);
}

message Version {
    string semver                        = 1;
    string git_commit_hash               = 2;
    google.protobuf.Timestamp build_time = 3;
    string go_version                    = 4;
    string os                            = 5;
    string arch                          = 6;
}

message ObserveInput {
    string asset_type                 = 1;
    string asset_id                   = 2;
    google.protobuf.Struct attributes = 3;
}

message CountObservationsInput {
    google.protobuf.Timestamp from = 1;
    google.protobuf.Timestamp to   = 2;
}

message CountObservationsOutput {
    uint64 count = 1;
}

message ListObservationsInput {
    google.protobuf.Timestamp from = 1;
    google.protobuf.Timestamp to   = 2;
    uint32 page                    = 3;
    uint32 page_size               = 4;
}

message ListObservationsOutput {
    repeated Observation observations = 1;
    uint32 next_page                  = 2;
}

message Observation {
    string id                           = 1;
    google.protobuf.Timestamp timestamp = 2;
    string asset_type                   = 3;
    string asset_id                     = 4;
    google.protobuf.Struct attributes   = 5;
    google.protobuf.Struct claims       = 6;
}
